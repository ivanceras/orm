package com.ivanceras.db.server.util.generators;

import static com.ivanceras.db.server.util.DAOGenerator.Array;
import com.ivanceras.commons.conf.Configuration;
import com.ivanceras.commons.strings.CStringUtils;
import com.ivanceras.commons.writer.FileUtil;
import com.ivanceras.commons.writer.SourceWriter;
import com.ivanceras.commons.writer.StringSourceWriter;
import com.ivanceras.db.api.ModelDef;
import com.ivanceras.db.shared.util.SpecialCase;

public class MapperGenerator {
	
	
	public void start(ModelDef[] modelList, Configuration conf) {
		for(ModelDef model : modelList){
			generateMapperClass(model, conf);
		}
	}

	private boolean generateMapperClass(ModelDef modeldef, Configuration conf){
		String directory = conf.mapperdirectory;
		String packageName = conf.mapperpackageName; 
		SourceWriter sw = new StringSourceWriter();
		
		boolean useCamelCase = conf.useCamelCase;
		String className = CStringUtils.capitalize(modeldef.getModelName(), useCamelCase);
		sw.print("package "+packageName+";");
		sw.lnprint("");
		sw.lnprint("/***");
		sw.lnprint("* This is automatically generated by "+MapperGenerator.class.getCanonicalName()+", based on the database table schema");
		sw.lnprint("* ");
		sw.lnprint("* ");
		sw.lnprint("*/");
		sw.lnprint("import "+conf.daopackageName+".DAO_"+className+";");
		sw.lnprint("import "+conf.bopackageName+"."+className+";");
		sw.lnprint("import "+conf.bopackageName+".*;");
		sw.lnprint("");
		sw.lnprint("public class "+className+"Mapper{");
		sw.lnprint("/**");
		sw.lnprint(" *"); 
		sw.lnprint(" */");

		String[] attributes = modeldef.getAttributes();
		String[] hasOne = modeldef.getHasOne();


		String[] distinctHasOne = BeanGenerator.getDistinctString(hasOne);

		String[] hasMany = modeldef.getHasMany();

		/**
		 * map from DAO to Business Object
		 */
		sw.lnprint("\tpublic static "+className+" map(DAO_"+className+" dao"+className+"){");
		String boObject = CStringUtils.toVariableName(className, useCamelCase);
		sw.lnprint("\t\tif(dao"+className+" == null){");
		sw.lnprint("\t\t\treturn null;");
		sw.lnprint("\t\t}");
		sw.lnprint("\t\t"+className+" "+boObject+" = new "+className+"();"); 
		for(int i = 0; i < attributes.length; i++){
			String att = attributes[i];
			att = SpecialCase.getEquiv(att);
			att = CStringUtils.capitalize(att.toLowerCase(), useCamelCase);
			sw.lnprint("\t\t"+boObject+".set"+att+"(dao"+className+".get"+att+"());");
		}
		for(int j = 0; j < distinctHasOne.length; j++){
			String distinctHasOneStr = CStringUtils.capitalize(distinctHasOne[j].toLowerCase(), useCamelCase);
			sw.lnprint("\t\t"+boObject+".set"+distinctHasOneStr+"("+distinctHasOneStr+"Mapper.map("+"dao"+className+".get"+distinctHasOneStr+"()));");
		}
		for(int k = 0; k < hasMany.length; k++){
			String hasManyStr = CStringUtils.capitalize(hasMany[k].toLowerCase(), useCamelCase);
			sw.lnprint("\t\t"+boObject+".set"+hasManyStr+Array+"("+hasManyStr+"Mapper.map(dao"+className+".get"+hasManyStr+Array+"()));");
		}

		sw.lnprint("\t\treturn "+boObject+";");
		sw.lnprint("\t}");
		sw.lnprint("");

		/**
		 * map from Business Object to DAO
		 */
		sw.lnprint("\tpublic static DAO_"+className+" map("+className+" "+boObject+"){");
		sw.lnprint("\t\tif("+boObject+" == null){");
		sw.lnprint("\t\t\treturn null;");
		sw.lnprint("\t\t}");

		sw.lnprint("\t\tDAO_"+className+" dao"+className+" = new DAO_"+className+"();"); 
		for(int i = 0; i < attributes.length; i++){
			String att = SpecialCase.getEquiv(attributes[i]);
			att = CStringUtils.capitalize(att.toLowerCase(), useCamelCase);
			sw.lnprint("\t\tdao"+className+".set"+att+"("+boObject+".get"+att+"());");
		}
		for(int j = 0; j < distinctHasOne.length; j++){
			String distinctHasOneStr = CStringUtils.capitalize(distinctHasOne[j].toLowerCase(), useCamelCase);
			sw.lnprint("\t\tdao"+className+".set"+distinctHasOneStr+"("+distinctHasOneStr+"Mapper.map("+boObject+".get"+distinctHasOneStr+"()));");
		}
		for(int k = 0; k < hasMany.length; k++){
			String hasManyStr = CStringUtils.capitalize(hasMany[k].toLowerCase(), useCamelCase);
			sw.lnprint("\t\tdao"+className+".set"+hasManyStr+Array+"("+hasManyStr+"Mapper.map("+boObject+".get"+hasManyStr+Array+"()));");
		}

		sw.lnprint("\t\treturn dao"+className+";");
		sw.lnprint("\t}");



		/**
		 * array mapping from DAO to Business Object
		 */
		sw.lnprint("\tpublic static "+className+"[] map(DAO_"+className+"[] dao"+className+Array+"){");
		sw.lnprint("\t\tif(dao"+className+Array+" == null){");
		sw.lnprint("\t\t\treturn null;");
		sw.lnprint("\t\t}");
		sw.lnprint("\t\t"+className+"[] "+boObject+Array+" = new "+className+"[dao"+className+Array+".length];");
		sw.lnprint("\t\tint index = 0;");
		sw.lnprint("\t\tfor(DAO_"+className+" dao"+className+" : dao"+className+Array+"){");
		sw.lnprint("\t\t\t"+boObject+Array+"[index++] = map(dao"+className+");");
		sw.lnprint("\t\t}");
		sw.lnprint("\t\treturn "+boObject+Array+";");
		sw.lnprint("\t}");

		/**
		 * array mapping from Business Object to DAO
		 */
		sw.lnprint("\tpublic static DAO_"+className+"[] map("+className+"[] "+boObject+Array+"){");
		sw.lnprint("\t\tif("+boObject+Array+" == null){");
		sw.lnprint("\t\t\treturn null;");
		sw.lnprint("\t\t}");
		sw.lnprint("\t\tDAO_"+className+"[] dao"+className+Array+" = new DAO_"+className+"["+boObject+Array+".length];");
		sw.lnprint("\t\tint index = 0;");
		sw.lnprint("\t\tfor("+className+" "+className+" : "+boObject+Array+"){");
		sw.lnprint("\t\t\tdao"+className+Array+"[index++] = map("+className+");");
		sw.lnprint("\t\t}");
		sw.lnprint("\t\treturn dao"+className+Array+";");
		sw.lnprint("\t}");

		sw.lnprint("}");
		
		FileUtil.writeToFile(sw.toString(), directory, ""+className+"Mapper.java");

		return true;

	}
}
